/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apis/event/v2/api.proto

package stream.api.event;

public interface SubscribePayloadOrBuilder extends
    // @@protoc_insertion_point(interface_extends:apis.event.v2.SubscribePayload)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event name to subscribe to for custom events.
   * This can be a wildcard `my_service:*` or multiple events `my_event|my_other_event`.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Event name to subscribe to for custom events.
   * This can be a wildcard `my_service:*` or multiple events `my_event|my_other_event`.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The target to subscribe to.
   * </pre>
   *
   * <code>optional .apis.event.v2.EventTarget target = 2 [json_name = "target", (.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the target field is set.
   */
  boolean hasTarget();
  /**
   * <pre>
   * The target to subscribe to.
   * </pre>
   *
   * <code>optional .apis.event.v2.EventTarget target = 2 [json_name = "target", (.google.api.field_behavior) = REQUIRED];</code>
   * @return The target.
   */
  stream.api.event.EventTarget getTarget();
  /**
   * <pre>
   * The target to subscribe to.
   * </pre>
   *
   * <code>optional .apis.event.v2.EventTarget target = 2 [json_name = "target", (.google.api.field_behavior) = REQUIRED];</code>
   */
  stream.api.event.EventTargetOrBuilder getTargetOrBuilder();
}
