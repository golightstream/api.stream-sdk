/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: live/v21/api.proto

package stream.api.live;

public interface RenderingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:live.v21.Rendering)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * composition video parameters
   * </pre>
   *
   * <code>optional .live.v21.VideoRendering video = 1 [json_name = "video", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the video field is set.
   */
  boolean hasVideo();
  /**
   * <pre>
   * composition video parameters
   * </pre>
   *
   * <code>optional .live.v21.VideoRendering video = 1 [json_name = "video", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The video.
   */
  stream.api.live.VideoRendering getVideo();
  /**
   * <pre>
   * composition video parameters
   * </pre>
   *
   * <code>optional .live.v21.VideoRendering video = 1 [json_name = "video", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  stream.api.live.VideoRenderingOrBuilder getVideoOrBuilder();

  /**
   * <pre>
   * composition audio parameters
   * </pre>
   *
   * <code>optional .live.v21.AudioRendering audio = 2 [json_name = "audio", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the audio field is set.
   */
  boolean hasAudio();
  /**
   * <pre>
   * composition audio parameters
   * </pre>
   *
   * <code>optional .live.v21.AudioRendering audio = 2 [json_name = "audio", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The audio.
   */
  stream.api.live.AudioRendering getAudio();
  /**
   * <pre>
   * composition audio parameters
   * </pre>
   *
   * <code>optional .live.v21.AudioRendering audio = 2 [json_name = "audio", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  stream.api.live.AudioRenderingOrBuilder getAudioOrBuilder();

  /**
   * <pre>
   * rendering quality
   * </pre>
   *
   * <code>optional .live.v21.RenderingQuality quality = 3 [json_name = "quality", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the quality field is set.
   */
  boolean hasQuality();
  /**
   * <pre>
   * rendering quality
   * </pre>
   *
   * <code>optional .live.v21.RenderingQuality quality = 3 [json_name = "quality", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The enum numeric value on the wire for quality.
   */
  int getQualityValue();
  /**
   * <pre>
   * rendering quality
   * </pre>
   *
   * <code>optional .live.v21.RenderingQuality quality = 3 [json_name = "quality", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The quality.
   */
  stream.api.live.RenderingQuality getQuality();

  /**
   * <pre>
   * target end-to-end latency (in ms)
   * </pre>
   *
   * <code>optional uint32 target_latency = 4 [json_name = "targetLatency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the targetLatency field is set.
   */
  boolean hasTargetLatency();
  /**
   * <pre>
   * target end-to-end latency (in ms)
   * </pre>
   *
   * <code>optional uint32 target_latency = 4 [json_name = "targetLatency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The targetLatency.
   */
  int getTargetLatency();

  /**
   * <pre>
   * estimated composition complexity (where 0 is nominal complexity)
   * </pre>
   *
   * <code>optional int32 complexity = 5 [json_name = "complexity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the complexity field is set.
   */
  boolean hasComplexity();
  /**
   * <pre>
   * estimated composition complexity (where 0 is nominal complexity)
   * </pre>
   *
   * <code>optional int32 complexity = 5 [json_name = "complexity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The complexity.
   */
  int getComplexity();
}
