/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: live/v21/api.proto

package stream.api.live;

/**
 * Protobuf type {@code live.v21.SourceEvent}
 */
public final class SourceEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:live.v21.SourceEvent)
    SourceEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SourceEvent.newBuilder() to construct.
  private SourceEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SourceEvent() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SourceEvent();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SourceEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            stream.api.live.SourceCreateEvent.Builder subBuilder = null;
            if (typeCase_ == 1) {
              subBuilder = ((stream.api.live.SourceCreateEvent) type_).toBuilder();
            }
            type_ =
                input.readMessage(stream.api.live.SourceCreateEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((stream.api.live.SourceCreateEvent) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 1;
            break;
          }
          case 18: {
            stream.api.live.SourceUpdateEvent.Builder subBuilder = null;
            if (typeCase_ == 2) {
              subBuilder = ((stream.api.live.SourceUpdateEvent) type_).toBuilder();
            }
            type_ =
                input.readMessage(stream.api.live.SourceUpdateEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((stream.api.live.SourceUpdateEvent) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 2;
            break;
          }
          case 26: {
            stream.api.live.SourceDeleteEvent.Builder subBuilder = null;
            if (typeCase_ == 3) {
              subBuilder = ((stream.api.live.SourceDeleteEvent) type_).toBuilder();
            }
            type_ =
                input.readMessage(stream.api.live.SourceDeleteEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((stream.api.live.SourceDeleteEvent) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 3;
            break;
          }
          case 34: {
            stream.api.live.SourceAddEvent.Builder subBuilder = null;
            if (typeCase_ == 4) {
              subBuilder = ((stream.api.live.SourceAddEvent) type_).toBuilder();
            }
            type_ =
                input.readMessage(stream.api.live.SourceAddEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((stream.api.live.SourceAddEvent) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 4;
            break;
          }
          case 42: {
            stream.api.live.SourceDeleteEvent.Builder subBuilder = null;
            if (typeCase_ == 5) {
              subBuilder = ((stream.api.live.SourceDeleteEvent) type_).toBuilder();
            }
            type_ =
                input.readMessage(stream.api.live.SourceDeleteEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((stream.api.live.SourceDeleteEvent) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 5;
            break;
          }
          case 50: {
            stream.api.live.SourceStateEvent.Builder subBuilder = null;
            if (typeCase_ == 6) {
              subBuilder = ((stream.api.live.SourceStateEvent) type_).toBuilder();
            }
            type_ =
                input.readMessage(stream.api.live.SourceStateEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((stream.api.live.SourceStateEvent) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 6;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return stream.api.live.Api.internal_static_live_v21_SourceEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return stream.api.live.Api.internal_static_live_v21_SourceEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            stream.api.live.SourceEvent.class, stream.api.live.SourceEvent.Builder.class);
  }

  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    CREATE(1),
    UPDATE(2),
    DELETE(3),
    ADD(4),
    REMOVE(5),
    STATE(6),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 1: return CREATE;
        case 2: return UPDATE;
        case 3: return DELETE;
        case 4: return ADD;
        case 5: return REMOVE;
        case 6: return STATE;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  public static final int CREATE_FIELD_NUMBER = 1;
  /**
   * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
   * @return Whether the create field is set.
   */
  @java.lang.Override
  public boolean hasCreate() {
    return typeCase_ == 1;
  }
  /**
   * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
   * @return The create.
   */
  @java.lang.Override
  public stream.api.live.SourceCreateEvent getCreate() {
    if (typeCase_ == 1) {
       return (stream.api.live.SourceCreateEvent) type_;
    }
    return stream.api.live.SourceCreateEvent.getDefaultInstance();
  }
  /**
   * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
   */
  @java.lang.Override
  public stream.api.live.SourceCreateEventOrBuilder getCreateOrBuilder() {
    if (typeCase_ == 1) {
       return (stream.api.live.SourceCreateEvent) type_;
    }
    return stream.api.live.SourceCreateEvent.getDefaultInstance();
  }

  public static final int UPDATE_FIELD_NUMBER = 2;
  /**
   * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
   * @return Whether the update field is set.
   */
  @java.lang.Override
  public boolean hasUpdate() {
    return typeCase_ == 2;
  }
  /**
   * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
   * @return The update.
   */
  @java.lang.Override
  public stream.api.live.SourceUpdateEvent getUpdate() {
    if (typeCase_ == 2) {
       return (stream.api.live.SourceUpdateEvent) type_;
    }
    return stream.api.live.SourceUpdateEvent.getDefaultInstance();
  }
  /**
   * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
   */
  @java.lang.Override
  public stream.api.live.SourceUpdateEventOrBuilder getUpdateOrBuilder() {
    if (typeCase_ == 2) {
       return (stream.api.live.SourceUpdateEvent) type_;
    }
    return stream.api.live.SourceUpdateEvent.getDefaultInstance();
  }

  public static final int DELETE_FIELD_NUMBER = 3;
  /**
   * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
   * @return Whether the delete field is set.
   */
  @java.lang.Override
  public boolean hasDelete() {
    return typeCase_ == 3;
  }
  /**
   * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
   * @return The delete.
   */
  @java.lang.Override
  public stream.api.live.SourceDeleteEvent getDelete() {
    if (typeCase_ == 3) {
       return (stream.api.live.SourceDeleteEvent) type_;
    }
    return stream.api.live.SourceDeleteEvent.getDefaultInstance();
  }
  /**
   * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
   */
  @java.lang.Override
  public stream.api.live.SourceDeleteEventOrBuilder getDeleteOrBuilder() {
    if (typeCase_ == 3) {
       return (stream.api.live.SourceDeleteEvent) type_;
    }
    return stream.api.live.SourceDeleteEvent.getDefaultInstance();
  }

  public static final int ADD_FIELD_NUMBER = 4;
  /**
   * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
   * @return Whether the add field is set.
   */
  @java.lang.Override
  public boolean hasAdd() {
    return typeCase_ == 4;
  }
  /**
   * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
   * @return The add.
   */
  @java.lang.Override
  public stream.api.live.SourceAddEvent getAdd() {
    if (typeCase_ == 4) {
       return (stream.api.live.SourceAddEvent) type_;
    }
    return stream.api.live.SourceAddEvent.getDefaultInstance();
  }
  /**
   * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
   */
  @java.lang.Override
  public stream.api.live.SourceAddEventOrBuilder getAddOrBuilder() {
    if (typeCase_ == 4) {
       return (stream.api.live.SourceAddEvent) type_;
    }
    return stream.api.live.SourceAddEvent.getDefaultInstance();
  }

  public static final int REMOVE_FIELD_NUMBER = 5;
  /**
   * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
   * @return Whether the remove field is set.
   */
  @java.lang.Override
  public boolean hasRemove() {
    return typeCase_ == 5;
  }
  /**
   * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
   * @return The remove.
   */
  @java.lang.Override
  public stream.api.live.SourceDeleteEvent getRemove() {
    if (typeCase_ == 5) {
       return (stream.api.live.SourceDeleteEvent) type_;
    }
    return stream.api.live.SourceDeleteEvent.getDefaultInstance();
  }
  /**
   * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
   */
  @java.lang.Override
  public stream.api.live.SourceDeleteEventOrBuilder getRemoveOrBuilder() {
    if (typeCase_ == 5) {
       return (stream.api.live.SourceDeleteEvent) type_;
    }
    return stream.api.live.SourceDeleteEvent.getDefaultInstance();
  }

  public static final int STATE_FIELD_NUMBER = 6;
  /**
   * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
   * @return Whether the state field is set.
   */
  @java.lang.Override
  public boolean hasState() {
    return typeCase_ == 6;
  }
  /**
   * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
   * @return The state.
   */
  @java.lang.Override
  public stream.api.live.SourceStateEvent getState() {
    if (typeCase_ == 6) {
       return (stream.api.live.SourceStateEvent) type_;
    }
    return stream.api.live.SourceStateEvent.getDefaultInstance();
  }
  /**
   * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
   */
  @java.lang.Override
  public stream.api.live.SourceStateEventOrBuilder getStateOrBuilder() {
    if (typeCase_ == 6) {
       return (stream.api.live.SourceStateEvent) type_;
    }
    return stream.api.live.SourceStateEvent.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typeCase_ == 1) {
      output.writeMessage(1, (stream.api.live.SourceCreateEvent) type_);
    }
    if (typeCase_ == 2) {
      output.writeMessage(2, (stream.api.live.SourceUpdateEvent) type_);
    }
    if (typeCase_ == 3) {
      output.writeMessage(3, (stream.api.live.SourceDeleteEvent) type_);
    }
    if (typeCase_ == 4) {
      output.writeMessage(4, (stream.api.live.SourceAddEvent) type_);
    }
    if (typeCase_ == 5) {
      output.writeMessage(5, (stream.api.live.SourceDeleteEvent) type_);
    }
    if (typeCase_ == 6) {
      output.writeMessage(6, (stream.api.live.SourceStateEvent) type_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (stream.api.live.SourceCreateEvent) type_);
    }
    if (typeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (stream.api.live.SourceUpdateEvent) type_);
    }
    if (typeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (stream.api.live.SourceDeleteEvent) type_);
    }
    if (typeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (stream.api.live.SourceAddEvent) type_);
    }
    if (typeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (stream.api.live.SourceDeleteEvent) type_);
    }
    if (typeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (stream.api.live.SourceStateEvent) type_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof stream.api.live.SourceEvent)) {
      return super.equals(obj);
    }
    stream.api.live.SourceEvent other = (stream.api.live.SourceEvent) obj;

    if (!getTypeCase().equals(other.getTypeCase())) return false;
    switch (typeCase_) {
      case 1:
        if (!getCreate()
            .equals(other.getCreate())) return false;
        break;
      case 2:
        if (!getUpdate()
            .equals(other.getUpdate())) return false;
        break;
      case 3:
        if (!getDelete()
            .equals(other.getDelete())) return false;
        break;
      case 4:
        if (!getAdd()
            .equals(other.getAdd())) return false;
        break;
      case 5:
        if (!getRemove()
            .equals(other.getRemove())) return false;
        break;
      case 6:
        if (!getState()
            .equals(other.getState())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (typeCase_) {
      case 1:
        hash = (37 * hash) + CREATE_FIELD_NUMBER;
        hash = (53 * hash) + getCreate().hashCode();
        break;
      case 2:
        hash = (37 * hash) + UPDATE_FIELD_NUMBER;
        hash = (53 * hash) + getUpdate().hashCode();
        break;
      case 3:
        hash = (37 * hash) + DELETE_FIELD_NUMBER;
        hash = (53 * hash) + getDelete().hashCode();
        break;
      case 4:
        hash = (37 * hash) + ADD_FIELD_NUMBER;
        hash = (53 * hash) + getAdd().hashCode();
        break;
      case 5:
        hash = (37 * hash) + REMOVE_FIELD_NUMBER;
        hash = (53 * hash) + getRemove().hashCode();
        break;
      case 6:
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static stream.api.live.SourceEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static stream.api.live.SourceEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static stream.api.live.SourceEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static stream.api.live.SourceEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static stream.api.live.SourceEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static stream.api.live.SourceEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static stream.api.live.SourceEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static stream.api.live.SourceEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static stream.api.live.SourceEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static stream.api.live.SourceEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static stream.api.live.SourceEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static stream.api.live.SourceEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(stream.api.live.SourceEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code live.v21.SourceEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:live.v21.SourceEvent)
      stream.api.live.SourceEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return stream.api.live.Api.internal_static_live_v21_SourceEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return stream.api.live.Api.internal_static_live_v21_SourceEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              stream.api.live.SourceEvent.class, stream.api.live.SourceEvent.Builder.class);
    }

    // Construct using stream.api.live.SourceEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return stream.api.live.Api.internal_static_live_v21_SourceEvent_descriptor;
    }

    @java.lang.Override
    public stream.api.live.SourceEvent getDefaultInstanceForType() {
      return stream.api.live.SourceEvent.getDefaultInstance();
    }

    @java.lang.Override
    public stream.api.live.SourceEvent build() {
      stream.api.live.SourceEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public stream.api.live.SourceEvent buildPartial() {
      stream.api.live.SourceEvent result = new stream.api.live.SourceEvent(this);
      if (typeCase_ == 1) {
        if (createBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = createBuilder_.build();
        }
      }
      if (typeCase_ == 2) {
        if (updateBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = updateBuilder_.build();
        }
      }
      if (typeCase_ == 3) {
        if (deleteBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = deleteBuilder_.build();
        }
      }
      if (typeCase_ == 4) {
        if (addBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = addBuilder_.build();
        }
      }
      if (typeCase_ == 5) {
        if (removeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = removeBuilder_.build();
        }
      }
      if (typeCase_ == 6) {
        if (stateBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = stateBuilder_.build();
        }
      }
      result.typeCase_ = typeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof stream.api.live.SourceEvent) {
        return mergeFrom((stream.api.live.SourceEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(stream.api.live.SourceEvent other) {
      if (other == stream.api.live.SourceEvent.getDefaultInstance()) return this;
      switch (other.getTypeCase()) {
        case CREATE: {
          mergeCreate(other.getCreate());
          break;
        }
        case UPDATE: {
          mergeUpdate(other.getUpdate());
          break;
        }
        case DELETE: {
          mergeDelete(other.getDelete());
          break;
        }
        case ADD: {
          mergeAdd(other.getAdd());
          break;
        }
        case REMOVE: {
          mergeRemove(other.getRemove());
          break;
        }
        case STATE: {
          mergeState(other.getState());
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      stream.api.live.SourceEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (stream.api.live.SourceEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public TypeCase
        getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceCreateEvent, stream.api.live.SourceCreateEvent.Builder, stream.api.live.SourceCreateEventOrBuilder> createBuilder_;
    /**
     * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
     * @return Whether the create field is set.
     */
    @java.lang.Override
    public boolean hasCreate() {
      return typeCase_ == 1;
    }
    /**
     * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
     * @return The create.
     */
    @java.lang.Override
    public stream.api.live.SourceCreateEvent getCreate() {
      if (createBuilder_ == null) {
        if (typeCase_ == 1) {
          return (stream.api.live.SourceCreateEvent) type_;
        }
        return stream.api.live.SourceCreateEvent.getDefaultInstance();
      } else {
        if (typeCase_ == 1) {
          return createBuilder_.getMessage();
        }
        return stream.api.live.SourceCreateEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
     */
    public Builder setCreate(stream.api.live.SourceCreateEvent value) {
      if (createBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        createBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
     */
    public Builder setCreate(
        stream.api.live.SourceCreateEvent.Builder builderForValue) {
      if (createBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        createBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
     */
    public Builder mergeCreate(stream.api.live.SourceCreateEvent value) {
      if (createBuilder_ == null) {
        if (typeCase_ == 1 &&
            type_ != stream.api.live.SourceCreateEvent.getDefaultInstance()) {
          type_ = stream.api.live.SourceCreateEvent.newBuilder((stream.api.live.SourceCreateEvent) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 1) {
          createBuilder_.mergeFrom(value);
        }
        createBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
     */
    public Builder clearCreate() {
      if (createBuilder_ == null) {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
        }
        createBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
     */
    public stream.api.live.SourceCreateEvent.Builder getCreateBuilder() {
      return getCreateFieldBuilder().getBuilder();
    }
    /**
     * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
     */
    @java.lang.Override
    public stream.api.live.SourceCreateEventOrBuilder getCreateOrBuilder() {
      if ((typeCase_ == 1) && (createBuilder_ != null)) {
        return createBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 1) {
          return (stream.api.live.SourceCreateEvent) type_;
        }
        return stream.api.live.SourceCreateEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceCreateEvent, stream.api.live.SourceCreateEvent.Builder, stream.api.live.SourceCreateEventOrBuilder> 
        getCreateFieldBuilder() {
      if (createBuilder_ == null) {
        if (!(typeCase_ == 1)) {
          type_ = stream.api.live.SourceCreateEvent.getDefaultInstance();
        }
        createBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            stream.api.live.SourceCreateEvent, stream.api.live.SourceCreateEvent.Builder, stream.api.live.SourceCreateEventOrBuilder>(
                (stream.api.live.SourceCreateEvent) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 1;
      onChanged();;
      return createBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceUpdateEvent, stream.api.live.SourceUpdateEvent.Builder, stream.api.live.SourceUpdateEventOrBuilder> updateBuilder_;
    /**
     * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
     * @return Whether the update field is set.
     */
    @java.lang.Override
    public boolean hasUpdate() {
      return typeCase_ == 2;
    }
    /**
     * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
     * @return The update.
     */
    @java.lang.Override
    public stream.api.live.SourceUpdateEvent getUpdate() {
      if (updateBuilder_ == null) {
        if (typeCase_ == 2) {
          return (stream.api.live.SourceUpdateEvent) type_;
        }
        return stream.api.live.SourceUpdateEvent.getDefaultInstance();
      } else {
        if (typeCase_ == 2) {
          return updateBuilder_.getMessage();
        }
        return stream.api.live.SourceUpdateEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
     */
    public Builder setUpdate(stream.api.live.SourceUpdateEvent value) {
      if (updateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        updateBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
     */
    public Builder setUpdate(
        stream.api.live.SourceUpdateEvent.Builder builderForValue) {
      if (updateBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        updateBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
     */
    public Builder mergeUpdate(stream.api.live.SourceUpdateEvent value) {
      if (updateBuilder_ == null) {
        if (typeCase_ == 2 &&
            type_ != stream.api.live.SourceUpdateEvent.getDefaultInstance()) {
          type_ = stream.api.live.SourceUpdateEvent.newBuilder((stream.api.live.SourceUpdateEvent) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 2) {
          updateBuilder_.mergeFrom(value);
        }
        updateBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
     */
    public Builder clearUpdate() {
      if (updateBuilder_ == null) {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
        }
        updateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
     */
    public stream.api.live.SourceUpdateEvent.Builder getUpdateBuilder() {
      return getUpdateFieldBuilder().getBuilder();
    }
    /**
     * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
     */
    @java.lang.Override
    public stream.api.live.SourceUpdateEventOrBuilder getUpdateOrBuilder() {
      if ((typeCase_ == 2) && (updateBuilder_ != null)) {
        return updateBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 2) {
          return (stream.api.live.SourceUpdateEvent) type_;
        }
        return stream.api.live.SourceUpdateEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceUpdateEvent, stream.api.live.SourceUpdateEvent.Builder, stream.api.live.SourceUpdateEventOrBuilder> 
        getUpdateFieldBuilder() {
      if (updateBuilder_ == null) {
        if (!(typeCase_ == 2)) {
          type_ = stream.api.live.SourceUpdateEvent.getDefaultInstance();
        }
        updateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            stream.api.live.SourceUpdateEvent, stream.api.live.SourceUpdateEvent.Builder, stream.api.live.SourceUpdateEventOrBuilder>(
                (stream.api.live.SourceUpdateEvent) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 2;
      onChanged();;
      return updateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceDeleteEvent, stream.api.live.SourceDeleteEvent.Builder, stream.api.live.SourceDeleteEventOrBuilder> deleteBuilder_;
    /**
     * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
     * @return Whether the delete field is set.
     */
    @java.lang.Override
    public boolean hasDelete() {
      return typeCase_ == 3;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
     * @return The delete.
     */
    @java.lang.Override
    public stream.api.live.SourceDeleteEvent getDelete() {
      if (deleteBuilder_ == null) {
        if (typeCase_ == 3) {
          return (stream.api.live.SourceDeleteEvent) type_;
        }
        return stream.api.live.SourceDeleteEvent.getDefaultInstance();
      } else {
        if (typeCase_ == 3) {
          return deleteBuilder_.getMessage();
        }
        return stream.api.live.SourceDeleteEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
     */
    public Builder setDelete(stream.api.live.SourceDeleteEvent value) {
      if (deleteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        deleteBuilder_.setMessage(value);
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
     */
    public Builder setDelete(
        stream.api.live.SourceDeleteEvent.Builder builderForValue) {
      if (deleteBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        deleteBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
     */
    public Builder mergeDelete(stream.api.live.SourceDeleteEvent value) {
      if (deleteBuilder_ == null) {
        if (typeCase_ == 3 &&
            type_ != stream.api.live.SourceDeleteEvent.getDefaultInstance()) {
          type_ = stream.api.live.SourceDeleteEvent.newBuilder((stream.api.live.SourceDeleteEvent) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 3) {
          deleteBuilder_.mergeFrom(value);
        }
        deleteBuilder_.setMessage(value);
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
     */
    public Builder clearDelete() {
      if (deleteBuilder_ == null) {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
        }
        deleteBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
     */
    public stream.api.live.SourceDeleteEvent.Builder getDeleteBuilder() {
      return getDeleteFieldBuilder().getBuilder();
    }
    /**
     * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
     */
    @java.lang.Override
    public stream.api.live.SourceDeleteEventOrBuilder getDeleteOrBuilder() {
      if ((typeCase_ == 3) && (deleteBuilder_ != null)) {
        return deleteBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 3) {
          return (stream.api.live.SourceDeleteEvent) type_;
        }
        return stream.api.live.SourceDeleteEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceDeleteEvent, stream.api.live.SourceDeleteEvent.Builder, stream.api.live.SourceDeleteEventOrBuilder> 
        getDeleteFieldBuilder() {
      if (deleteBuilder_ == null) {
        if (!(typeCase_ == 3)) {
          type_ = stream.api.live.SourceDeleteEvent.getDefaultInstance();
        }
        deleteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            stream.api.live.SourceDeleteEvent, stream.api.live.SourceDeleteEvent.Builder, stream.api.live.SourceDeleteEventOrBuilder>(
                (stream.api.live.SourceDeleteEvent) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 3;
      onChanged();;
      return deleteBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceAddEvent, stream.api.live.SourceAddEvent.Builder, stream.api.live.SourceAddEventOrBuilder> addBuilder_;
    /**
     * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
     * @return Whether the add field is set.
     */
    @java.lang.Override
    public boolean hasAdd() {
      return typeCase_ == 4;
    }
    /**
     * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
     * @return The add.
     */
    @java.lang.Override
    public stream.api.live.SourceAddEvent getAdd() {
      if (addBuilder_ == null) {
        if (typeCase_ == 4) {
          return (stream.api.live.SourceAddEvent) type_;
        }
        return stream.api.live.SourceAddEvent.getDefaultInstance();
      } else {
        if (typeCase_ == 4) {
          return addBuilder_.getMessage();
        }
        return stream.api.live.SourceAddEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
     */
    public Builder setAdd(stream.api.live.SourceAddEvent value) {
      if (addBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        addBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
     */
    public Builder setAdd(
        stream.api.live.SourceAddEvent.Builder builderForValue) {
      if (addBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        addBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
     */
    public Builder mergeAdd(stream.api.live.SourceAddEvent value) {
      if (addBuilder_ == null) {
        if (typeCase_ == 4 &&
            type_ != stream.api.live.SourceAddEvent.getDefaultInstance()) {
          type_ = stream.api.live.SourceAddEvent.newBuilder((stream.api.live.SourceAddEvent) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 4) {
          addBuilder_.mergeFrom(value);
        }
        addBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
     */
    public Builder clearAdd() {
      if (addBuilder_ == null) {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
        }
        addBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
     */
    public stream.api.live.SourceAddEvent.Builder getAddBuilder() {
      return getAddFieldBuilder().getBuilder();
    }
    /**
     * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
     */
    @java.lang.Override
    public stream.api.live.SourceAddEventOrBuilder getAddOrBuilder() {
      if ((typeCase_ == 4) && (addBuilder_ != null)) {
        return addBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 4) {
          return (stream.api.live.SourceAddEvent) type_;
        }
        return stream.api.live.SourceAddEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceAddEvent, stream.api.live.SourceAddEvent.Builder, stream.api.live.SourceAddEventOrBuilder> 
        getAddFieldBuilder() {
      if (addBuilder_ == null) {
        if (!(typeCase_ == 4)) {
          type_ = stream.api.live.SourceAddEvent.getDefaultInstance();
        }
        addBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            stream.api.live.SourceAddEvent, stream.api.live.SourceAddEvent.Builder, stream.api.live.SourceAddEventOrBuilder>(
                (stream.api.live.SourceAddEvent) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 4;
      onChanged();;
      return addBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceDeleteEvent, stream.api.live.SourceDeleteEvent.Builder, stream.api.live.SourceDeleteEventOrBuilder> removeBuilder_;
    /**
     * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
     * @return Whether the remove field is set.
     */
    @java.lang.Override
    public boolean hasRemove() {
      return typeCase_ == 5;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
     * @return The remove.
     */
    @java.lang.Override
    public stream.api.live.SourceDeleteEvent getRemove() {
      if (removeBuilder_ == null) {
        if (typeCase_ == 5) {
          return (stream.api.live.SourceDeleteEvent) type_;
        }
        return stream.api.live.SourceDeleteEvent.getDefaultInstance();
      } else {
        if (typeCase_ == 5) {
          return removeBuilder_.getMessage();
        }
        return stream.api.live.SourceDeleteEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
     */
    public Builder setRemove(stream.api.live.SourceDeleteEvent value) {
      if (removeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        removeBuilder_.setMessage(value);
      }
      typeCase_ = 5;
      return this;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
     */
    public Builder setRemove(
        stream.api.live.SourceDeleteEvent.Builder builderForValue) {
      if (removeBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        removeBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 5;
      return this;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
     */
    public Builder mergeRemove(stream.api.live.SourceDeleteEvent value) {
      if (removeBuilder_ == null) {
        if (typeCase_ == 5 &&
            type_ != stream.api.live.SourceDeleteEvent.getDefaultInstance()) {
          type_ = stream.api.live.SourceDeleteEvent.newBuilder((stream.api.live.SourceDeleteEvent) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 5) {
          removeBuilder_.mergeFrom(value);
        }
        removeBuilder_.setMessage(value);
      }
      typeCase_ = 5;
      return this;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
     */
    public Builder clearRemove() {
      if (removeBuilder_ == null) {
        if (typeCase_ == 5) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 5) {
          typeCase_ = 0;
          type_ = null;
        }
        removeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
     */
    public stream.api.live.SourceDeleteEvent.Builder getRemoveBuilder() {
      return getRemoveFieldBuilder().getBuilder();
    }
    /**
     * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
     */
    @java.lang.Override
    public stream.api.live.SourceDeleteEventOrBuilder getRemoveOrBuilder() {
      if ((typeCase_ == 5) && (removeBuilder_ != null)) {
        return removeBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 5) {
          return (stream.api.live.SourceDeleteEvent) type_;
        }
        return stream.api.live.SourceDeleteEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceDeleteEvent, stream.api.live.SourceDeleteEvent.Builder, stream.api.live.SourceDeleteEventOrBuilder> 
        getRemoveFieldBuilder() {
      if (removeBuilder_ == null) {
        if (!(typeCase_ == 5)) {
          type_ = stream.api.live.SourceDeleteEvent.getDefaultInstance();
        }
        removeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            stream.api.live.SourceDeleteEvent, stream.api.live.SourceDeleteEvent.Builder, stream.api.live.SourceDeleteEventOrBuilder>(
                (stream.api.live.SourceDeleteEvent) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 5;
      onChanged();;
      return removeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceStateEvent, stream.api.live.SourceStateEvent.Builder, stream.api.live.SourceStateEventOrBuilder> stateBuilder_;
    /**
     * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override
    public boolean hasState() {
      return typeCase_ == 6;
    }
    /**
     * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
     * @return The state.
     */
    @java.lang.Override
    public stream.api.live.SourceStateEvent getState() {
      if (stateBuilder_ == null) {
        if (typeCase_ == 6) {
          return (stream.api.live.SourceStateEvent) type_;
        }
        return stream.api.live.SourceStateEvent.getDefaultInstance();
      } else {
        if (typeCase_ == 6) {
          return stateBuilder_.getMessage();
        }
        return stream.api.live.SourceStateEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
     */
    public Builder setState(stream.api.live.SourceStateEvent value) {
      if (stateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        stateBuilder_.setMessage(value);
      }
      typeCase_ = 6;
      return this;
    }
    /**
     * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
     */
    public Builder setState(
        stream.api.live.SourceStateEvent.Builder builderForValue) {
      if (stateBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        stateBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 6;
      return this;
    }
    /**
     * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
     */
    public Builder mergeState(stream.api.live.SourceStateEvent value) {
      if (stateBuilder_ == null) {
        if (typeCase_ == 6 &&
            type_ != stream.api.live.SourceStateEvent.getDefaultInstance()) {
          type_ = stream.api.live.SourceStateEvent.newBuilder((stream.api.live.SourceStateEvent) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 6) {
          stateBuilder_.mergeFrom(value);
        }
        stateBuilder_.setMessage(value);
      }
      typeCase_ = 6;
      return this;
    }
    /**
     * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
     */
    public Builder clearState() {
      if (stateBuilder_ == null) {
        if (typeCase_ == 6) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 6) {
          typeCase_ = 0;
          type_ = null;
        }
        stateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
     */
    public stream.api.live.SourceStateEvent.Builder getStateBuilder() {
      return getStateFieldBuilder().getBuilder();
    }
    /**
     * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
     */
    @java.lang.Override
    public stream.api.live.SourceStateEventOrBuilder getStateOrBuilder() {
      if ((typeCase_ == 6) && (stateBuilder_ != null)) {
        return stateBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 6) {
          return (stream.api.live.SourceStateEvent) type_;
        }
        return stream.api.live.SourceStateEvent.getDefaultInstance();
      }
    }
    /**
     * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SourceStateEvent, stream.api.live.SourceStateEvent.Builder, stream.api.live.SourceStateEventOrBuilder> 
        getStateFieldBuilder() {
      if (stateBuilder_ == null) {
        if (!(typeCase_ == 6)) {
          type_ = stream.api.live.SourceStateEvent.getDefaultInstance();
        }
        stateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            stream.api.live.SourceStateEvent, stream.api.live.SourceStateEvent.Builder, stream.api.live.SourceStateEventOrBuilder>(
                (stream.api.live.SourceStateEvent) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 6;
      onChanged();;
      return stateBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:live.v21.SourceEvent)
  }

  // @@protoc_insertion_point(class_scope:live.v21.SourceEvent)
  private static final stream.api.live.SourceEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new stream.api.live.SourceEvent();
  }

  public static stream.api.live.SourceEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SourceEvent>
      PARSER = new com.google.protobuf.AbstractParser<SourceEvent>() {
    @java.lang.Override
    public SourceEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SourceEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SourceEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SourceEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public stream.api.live.SourceEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

