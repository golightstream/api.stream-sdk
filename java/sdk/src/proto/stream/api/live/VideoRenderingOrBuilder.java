/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: live/v21/api.proto

package stream.api.live;

public interface VideoRenderingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:live.v21.VideoRendering)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * canvas height (pixels)
   * </pre>
   *
   * <code>optional uint32 height = 1 [json_name = "height", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the height field is set.
   */
  boolean hasHeight();
  /**
   * <pre>
   * canvas height (pixels)
   * </pre>
   *
   * <code>optional uint32 height = 1 [json_name = "height", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The height.
   */
  int getHeight();

  /**
   * <pre>
   * canvas width (pixels)
   * </pre>
   *
   * <code>optional uint32 width = 2 [json_name = "width", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the width field is set.
   */
  boolean hasWidth();
  /**
   * <pre>
   * canvas width (pixels)
   * </pre>
   *
   * <code>optional uint32 width = 2 [json_name = "width", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The width.
   */
  int getWidth();

  /**
   * <pre>
   * canvas frame rate (frames/s)
   * </pre>
   *
   * <code>optional float framerate = 3 [json_name = "framerate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the framerate field is set.
   */
  boolean hasFramerate();
  /**
   * <pre>
   * canvas frame rate (frames/s)
   * </pre>
   *
   * <code>optional float framerate = 3 [json_name = "framerate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The framerate.
   */
  float getFramerate();

  /**
   * <pre>
   * rendering color space
   * </pre>
   *
   * <code>optional .live.v21.VideoColorSpace color_space = 4 [json_name = "colorSpace", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the colorSpace field is set.
   */
  boolean hasColorSpace();
  /**
   * <pre>
   * rendering color space
   * </pre>
   *
   * <code>optional .live.v21.VideoColorSpace color_space = 4 [json_name = "colorSpace", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The enum numeric value on the wire for colorSpace.
   */
  int getColorSpaceValue();
  /**
   * <pre>
   * rendering color space
   * </pre>
   *
   * <code>optional .live.v21.VideoColorSpace color_space = 4 [json_name = "colorSpace", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The colorSpace.
   */
  stream.api.live.VideoColorSpace getColorSpace();
}
