/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: live/v21/api.proto

package stream.api.live;

public interface SourceEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:live.v21.SourceEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
   * @return Whether the create field is set.
   */
  boolean hasCreate();
  /**
   * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
   * @return The create.
   */
  stream.api.live.SourceCreateEvent getCreate();
  /**
   * <code>.live.v21.SourceCreateEvent create = 1 [json_name = "create"];</code>
   */
  stream.api.live.SourceCreateEventOrBuilder getCreateOrBuilder();

  /**
   * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
   * @return Whether the update field is set.
   */
  boolean hasUpdate();
  /**
   * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
   * @return The update.
   */
  stream.api.live.SourceUpdateEvent getUpdate();
  /**
   * <code>.live.v21.SourceUpdateEvent update = 2 [json_name = "update"];</code>
   */
  stream.api.live.SourceUpdateEventOrBuilder getUpdateOrBuilder();

  /**
   * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
   * @return Whether the delete field is set.
   */
  boolean hasDelete();
  /**
   * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
   * @return The delete.
   */
  stream.api.live.SourceDeleteEvent getDelete();
  /**
   * <code>.live.v21.SourceDeleteEvent delete = 3 [json_name = "delete"];</code>
   */
  stream.api.live.SourceDeleteEventOrBuilder getDeleteOrBuilder();

  /**
   * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
   * @return Whether the add field is set.
   */
  boolean hasAdd();
  /**
   * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
   * @return The add.
   */
  stream.api.live.SourceAddEvent getAdd();
  /**
   * <code>.live.v21.SourceAddEvent add = 4 [json_name = "add"];</code>
   */
  stream.api.live.SourceAddEventOrBuilder getAddOrBuilder();

  /**
   * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
   * @return Whether the remove field is set.
   */
  boolean hasRemove();
  /**
   * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
   * @return The remove.
   */
  stream.api.live.SourceDeleteEvent getRemove();
  /**
   * <code>.live.v21.SourceDeleteEvent remove = 5 [json_name = "remove"];</code>
   */
  stream.api.live.SourceDeleteEventOrBuilder getRemoveOrBuilder();

  /**
   * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
   * @return Whether the state field is set.
   */
  boolean hasState();
  /**
   * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
   * @return The state.
   */
  stream.api.live.SourceStateEvent getState();
  /**
   * <code>.live.v21.SourceStateEvent state = 6 [json_name = "state"];</code>
   */
  stream.api.live.SourceStateEventOrBuilder getStateOrBuilder();

  public stream.api.live.SourceEvent.TypeCase getTypeCase();
}
