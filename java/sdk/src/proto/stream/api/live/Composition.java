/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: live/v21/api.proto

package stream.api.live;

/**
 * <pre>
 * composition source for project (select one)
 * </pre>
 *
 * Protobuf type {@code live.v21.Composition}
 */
public final class Composition extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:live.v21.Composition)
    CompositionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Composition.newBuilder() to construct.
  private Composition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Composition() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Composition();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Composition(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            stream.api.live.ExternalComposition.Builder subBuilder = null;
            if (typeCase_ == 1) {
              subBuilder = ((stream.api.live.ExternalComposition) type_).toBuilder();
            }
            type_ =
                input.readMessage(stream.api.live.ExternalComposition.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((stream.api.live.ExternalComposition) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 1;
            break;
          }
          case 18: {
            stream.api.live.StudioSdkComposition.Builder subBuilder = null;
            if (typeCase_ == 2) {
              subBuilder = ((stream.api.live.StudioSdkComposition) type_).toBuilder();
            }
            type_ =
                input.readMessage(stream.api.live.StudioSdkComposition.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((stream.api.live.StudioSdkComposition) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 2;
            break;
          }
          case 34: {
            stream.api.live.SceneComposition.Builder subBuilder = null;
            if (typeCase_ == 4) {
              subBuilder = ((stream.api.live.SceneComposition) type_).toBuilder();
            }
            type_ =
                input.readMessage(stream.api.live.SceneComposition.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((stream.api.live.SceneComposition) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return stream.api.live.Api.internal_static_live_v21_Composition_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return stream.api.live.Api.internal_static_live_v21_Composition_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            stream.api.live.Composition.class, stream.api.live.Composition.Builder.class);
  }

  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    EXTERNAL(1),
    STUDIO_SDK(2),
    SCENE(4),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 1: return EXTERNAL;
        case 2: return STUDIO_SDK;
        case 4: return SCENE;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  public static final int EXTERNAL_FIELD_NUMBER = 1;
  /**
   * <pre>
   * compose using an external renderer
   * </pre>
   *
   * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
   * @return Whether the external field is set.
   */
  @java.lang.Override
  public boolean hasExternal() {
    return typeCase_ == 1;
  }
  /**
   * <pre>
   * compose using an external renderer
   * </pre>
   *
   * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
   * @return The external.
   */
  @java.lang.Override
  public stream.api.live.ExternalComposition getExternal() {
    if (typeCase_ == 1) {
       return (stream.api.live.ExternalComposition) type_;
    }
    return stream.api.live.ExternalComposition.getDefaultInstance();
  }
  /**
   * <pre>
   * compose using an external renderer
   * </pre>
   *
   * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
   */
  @java.lang.Override
  public stream.api.live.ExternalCompositionOrBuilder getExternalOrBuilder() {
    if (typeCase_ == 1) {
       return (stream.api.live.ExternalComposition) type_;
    }
    return stream.api.live.ExternalComposition.getDefaultInstance();
  }

  public static final int STUDIO_SDK_FIELD_NUMBER = 2;
  /**
   * <pre>
   * compose using the studiosdk renderer
   * </pre>
   *
   * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
   * @return Whether the studioSdk field is set.
   */
  @java.lang.Override
  public boolean hasStudioSdk() {
    return typeCase_ == 2;
  }
  /**
   * <pre>
   * compose using the studiosdk renderer
   * </pre>
   *
   * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
   * @return The studioSdk.
   */
  @java.lang.Override
  public stream.api.live.StudioSdkComposition getStudioSdk() {
    if (typeCase_ == 2) {
       return (stream.api.live.StudioSdkComposition) type_;
    }
    return stream.api.live.StudioSdkComposition.getDefaultInstance();
  }
  /**
   * <pre>
   * compose using the studiosdk renderer
   * </pre>
   *
   * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
   */
  @java.lang.Override
  public stream.api.live.StudioSdkCompositionOrBuilder getStudioSdkOrBuilder() {
    if (typeCase_ == 2) {
       return (stream.api.live.StudioSdkComposition) type_;
    }
    return stream.api.live.StudioSdkComposition.getDefaultInstance();
  }

  public static final int SCENE_FIELD_NUMBER = 4;
  /**
   * <pre>
   * compose scenes using the browser-based compositor
   * </pre>
   *
   * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the scene field is set.
   */
  @java.lang.Override
  public boolean hasScene() {
    return typeCase_ == 4;
  }
  /**
   * <pre>
   * compose scenes using the browser-based compositor
   * </pre>
   *
   * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The scene.
   */
  @java.lang.Override
  public stream.api.live.SceneComposition getScene() {
    if (typeCase_ == 4) {
       return (stream.api.live.SceneComposition) type_;
    }
    return stream.api.live.SceneComposition.getDefaultInstance();
  }
  /**
   * <pre>
   * compose scenes using the browser-based compositor
   * </pre>
   *
   * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  @java.lang.Override
  public stream.api.live.SceneCompositionOrBuilder getSceneOrBuilder() {
    if (typeCase_ == 4) {
       return (stream.api.live.SceneComposition) type_;
    }
    return stream.api.live.SceneComposition.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typeCase_ == 1) {
      output.writeMessage(1, (stream.api.live.ExternalComposition) type_);
    }
    if (typeCase_ == 2) {
      output.writeMessage(2, (stream.api.live.StudioSdkComposition) type_);
    }
    if (typeCase_ == 4) {
      output.writeMessage(4, (stream.api.live.SceneComposition) type_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (stream.api.live.ExternalComposition) type_);
    }
    if (typeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (stream.api.live.StudioSdkComposition) type_);
    }
    if (typeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (stream.api.live.SceneComposition) type_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof stream.api.live.Composition)) {
      return super.equals(obj);
    }
    stream.api.live.Composition other = (stream.api.live.Composition) obj;

    if (!getTypeCase().equals(other.getTypeCase())) return false;
    switch (typeCase_) {
      case 1:
        if (!getExternal()
            .equals(other.getExternal())) return false;
        break;
      case 2:
        if (!getStudioSdk()
            .equals(other.getStudioSdk())) return false;
        break;
      case 4:
        if (!getScene()
            .equals(other.getScene())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (typeCase_) {
      case 1:
        hash = (37 * hash) + EXTERNAL_FIELD_NUMBER;
        hash = (53 * hash) + getExternal().hashCode();
        break;
      case 2:
        hash = (37 * hash) + STUDIO_SDK_FIELD_NUMBER;
        hash = (53 * hash) + getStudioSdk().hashCode();
        break;
      case 4:
        hash = (37 * hash) + SCENE_FIELD_NUMBER;
        hash = (53 * hash) + getScene().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static stream.api.live.Composition parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static stream.api.live.Composition parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static stream.api.live.Composition parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static stream.api.live.Composition parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static stream.api.live.Composition parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static stream.api.live.Composition parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static stream.api.live.Composition parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static stream.api.live.Composition parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static stream.api.live.Composition parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static stream.api.live.Composition parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static stream.api.live.Composition parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static stream.api.live.Composition parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(stream.api.live.Composition prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * composition source for project (select one)
   * </pre>
   *
   * Protobuf type {@code live.v21.Composition}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:live.v21.Composition)
      stream.api.live.CompositionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return stream.api.live.Api.internal_static_live_v21_Composition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return stream.api.live.Api.internal_static_live_v21_Composition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              stream.api.live.Composition.class, stream.api.live.Composition.Builder.class);
    }

    // Construct using stream.api.live.Composition.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return stream.api.live.Api.internal_static_live_v21_Composition_descriptor;
    }

    @java.lang.Override
    public stream.api.live.Composition getDefaultInstanceForType() {
      return stream.api.live.Composition.getDefaultInstance();
    }

    @java.lang.Override
    public stream.api.live.Composition build() {
      stream.api.live.Composition result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public stream.api.live.Composition buildPartial() {
      stream.api.live.Composition result = new stream.api.live.Composition(this);
      if (typeCase_ == 1) {
        if (externalBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = externalBuilder_.build();
        }
      }
      if (typeCase_ == 2) {
        if (studioSdkBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = studioSdkBuilder_.build();
        }
      }
      if (typeCase_ == 4) {
        if (sceneBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = sceneBuilder_.build();
        }
      }
      result.typeCase_ = typeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof stream.api.live.Composition) {
        return mergeFrom((stream.api.live.Composition)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(stream.api.live.Composition other) {
      if (other == stream.api.live.Composition.getDefaultInstance()) return this;
      switch (other.getTypeCase()) {
        case EXTERNAL: {
          mergeExternal(other.getExternal());
          break;
        }
        case STUDIO_SDK: {
          mergeStudioSdk(other.getStudioSdk());
          break;
        }
        case SCENE: {
          mergeScene(other.getScene());
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      stream.api.live.Composition parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (stream.api.live.Composition) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public TypeCase
        getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.ExternalComposition, stream.api.live.ExternalComposition.Builder, stream.api.live.ExternalCompositionOrBuilder> externalBuilder_;
    /**
     * <pre>
     * compose using an external renderer
     * </pre>
     *
     * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
     * @return Whether the external field is set.
     */
    @java.lang.Override
    public boolean hasExternal() {
      return typeCase_ == 1;
    }
    /**
     * <pre>
     * compose using an external renderer
     * </pre>
     *
     * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
     * @return The external.
     */
    @java.lang.Override
    public stream.api.live.ExternalComposition getExternal() {
      if (externalBuilder_ == null) {
        if (typeCase_ == 1) {
          return (stream.api.live.ExternalComposition) type_;
        }
        return stream.api.live.ExternalComposition.getDefaultInstance();
      } else {
        if (typeCase_ == 1) {
          return externalBuilder_.getMessage();
        }
        return stream.api.live.ExternalComposition.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * compose using an external renderer
     * </pre>
     *
     * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
     */
    public Builder setExternal(stream.api.live.ExternalComposition value) {
      if (externalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        externalBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * compose using an external renderer
     * </pre>
     *
     * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
     */
    public Builder setExternal(
        stream.api.live.ExternalComposition.Builder builderForValue) {
      if (externalBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        externalBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * compose using an external renderer
     * </pre>
     *
     * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
     */
    public Builder mergeExternal(stream.api.live.ExternalComposition value) {
      if (externalBuilder_ == null) {
        if (typeCase_ == 1 &&
            type_ != stream.api.live.ExternalComposition.getDefaultInstance()) {
          type_ = stream.api.live.ExternalComposition.newBuilder((stream.api.live.ExternalComposition) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 1) {
          externalBuilder_.mergeFrom(value);
        }
        externalBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * compose using an external renderer
     * </pre>
     *
     * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
     */
    public Builder clearExternal() {
      if (externalBuilder_ == null) {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
        }
        externalBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * compose using an external renderer
     * </pre>
     *
     * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
     */
    public stream.api.live.ExternalComposition.Builder getExternalBuilder() {
      return getExternalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * compose using an external renderer
     * </pre>
     *
     * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
     */
    @java.lang.Override
    public stream.api.live.ExternalCompositionOrBuilder getExternalOrBuilder() {
      if ((typeCase_ == 1) && (externalBuilder_ != null)) {
        return externalBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 1) {
          return (stream.api.live.ExternalComposition) type_;
        }
        return stream.api.live.ExternalComposition.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * compose using an external renderer
     * </pre>
     *
     * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.ExternalComposition, stream.api.live.ExternalComposition.Builder, stream.api.live.ExternalCompositionOrBuilder> 
        getExternalFieldBuilder() {
      if (externalBuilder_ == null) {
        if (!(typeCase_ == 1)) {
          type_ = stream.api.live.ExternalComposition.getDefaultInstance();
        }
        externalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            stream.api.live.ExternalComposition, stream.api.live.ExternalComposition.Builder, stream.api.live.ExternalCompositionOrBuilder>(
                (stream.api.live.ExternalComposition) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 1;
      onChanged();;
      return externalBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.StudioSdkComposition, stream.api.live.StudioSdkComposition.Builder, stream.api.live.StudioSdkCompositionOrBuilder> studioSdkBuilder_;
    /**
     * <pre>
     * compose using the studiosdk renderer
     * </pre>
     *
     * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
     * @return Whether the studioSdk field is set.
     */
    @java.lang.Override
    public boolean hasStudioSdk() {
      return typeCase_ == 2;
    }
    /**
     * <pre>
     * compose using the studiosdk renderer
     * </pre>
     *
     * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
     * @return The studioSdk.
     */
    @java.lang.Override
    public stream.api.live.StudioSdkComposition getStudioSdk() {
      if (studioSdkBuilder_ == null) {
        if (typeCase_ == 2) {
          return (stream.api.live.StudioSdkComposition) type_;
        }
        return stream.api.live.StudioSdkComposition.getDefaultInstance();
      } else {
        if (typeCase_ == 2) {
          return studioSdkBuilder_.getMessage();
        }
        return stream.api.live.StudioSdkComposition.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * compose using the studiosdk renderer
     * </pre>
     *
     * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
     */
    public Builder setStudioSdk(stream.api.live.StudioSdkComposition value) {
      if (studioSdkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        studioSdkBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * compose using the studiosdk renderer
     * </pre>
     *
     * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
     */
    public Builder setStudioSdk(
        stream.api.live.StudioSdkComposition.Builder builderForValue) {
      if (studioSdkBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        studioSdkBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * compose using the studiosdk renderer
     * </pre>
     *
     * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
     */
    public Builder mergeStudioSdk(stream.api.live.StudioSdkComposition value) {
      if (studioSdkBuilder_ == null) {
        if (typeCase_ == 2 &&
            type_ != stream.api.live.StudioSdkComposition.getDefaultInstance()) {
          type_ = stream.api.live.StudioSdkComposition.newBuilder((stream.api.live.StudioSdkComposition) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 2) {
          studioSdkBuilder_.mergeFrom(value);
        }
        studioSdkBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * compose using the studiosdk renderer
     * </pre>
     *
     * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
     */
    public Builder clearStudioSdk() {
      if (studioSdkBuilder_ == null) {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
        }
        studioSdkBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * compose using the studiosdk renderer
     * </pre>
     *
     * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
     */
    public stream.api.live.StudioSdkComposition.Builder getStudioSdkBuilder() {
      return getStudioSdkFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * compose using the studiosdk renderer
     * </pre>
     *
     * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
     */
    @java.lang.Override
    public stream.api.live.StudioSdkCompositionOrBuilder getStudioSdkOrBuilder() {
      if ((typeCase_ == 2) && (studioSdkBuilder_ != null)) {
        return studioSdkBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 2) {
          return (stream.api.live.StudioSdkComposition) type_;
        }
        return stream.api.live.StudioSdkComposition.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * compose using the studiosdk renderer
     * </pre>
     *
     * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.StudioSdkComposition, stream.api.live.StudioSdkComposition.Builder, stream.api.live.StudioSdkCompositionOrBuilder> 
        getStudioSdkFieldBuilder() {
      if (studioSdkBuilder_ == null) {
        if (!(typeCase_ == 2)) {
          type_ = stream.api.live.StudioSdkComposition.getDefaultInstance();
        }
        studioSdkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            stream.api.live.StudioSdkComposition, stream.api.live.StudioSdkComposition.Builder, stream.api.live.StudioSdkCompositionOrBuilder>(
                (stream.api.live.StudioSdkComposition) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 2;
      onChanged();;
      return studioSdkBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SceneComposition, stream.api.live.SceneComposition.Builder, stream.api.live.SceneCompositionOrBuilder> sceneBuilder_;
    /**
     * <pre>
     * compose scenes using the browser-based compositor
     * </pre>
     *
     * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the scene field is set.
     */
    @java.lang.Override
    public boolean hasScene() {
      return typeCase_ == 4;
    }
    /**
     * <pre>
     * compose scenes using the browser-based compositor
     * </pre>
     *
     * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The scene.
     */
    @java.lang.Override
    public stream.api.live.SceneComposition getScene() {
      if (sceneBuilder_ == null) {
        if (typeCase_ == 4) {
          return (stream.api.live.SceneComposition) type_;
        }
        return stream.api.live.SceneComposition.getDefaultInstance();
      } else {
        if (typeCase_ == 4) {
          return sceneBuilder_.getMessage();
        }
        return stream.api.live.SceneComposition.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * compose scenes using the browser-based compositor
     * </pre>
     *
     * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder setScene(stream.api.live.SceneComposition value) {
      if (sceneBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        sceneBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * compose scenes using the browser-based compositor
     * </pre>
     *
     * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder setScene(
        stream.api.live.SceneComposition.Builder builderForValue) {
      if (sceneBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        sceneBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * compose scenes using the browser-based compositor
     * </pre>
     *
     * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder mergeScene(stream.api.live.SceneComposition value) {
      if (sceneBuilder_ == null) {
        if (typeCase_ == 4 &&
            type_ != stream.api.live.SceneComposition.getDefaultInstance()) {
          type_ = stream.api.live.SceneComposition.newBuilder((stream.api.live.SceneComposition) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 4) {
          sceneBuilder_.mergeFrom(value);
        }
        sceneBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * compose scenes using the browser-based compositor
     * </pre>
     *
     * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public Builder clearScene() {
      if (sceneBuilder_ == null) {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
        }
        sceneBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * compose scenes using the browser-based compositor
     * </pre>
     *
     * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    public stream.api.live.SceneComposition.Builder getSceneBuilder() {
      return getSceneFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * compose scenes using the browser-based compositor
     * </pre>
     *
     * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public stream.api.live.SceneCompositionOrBuilder getSceneOrBuilder() {
      if ((typeCase_ == 4) && (sceneBuilder_ != null)) {
        return sceneBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 4) {
          return (stream.api.live.SceneComposition) type_;
        }
        return stream.api.live.SceneComposition.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * compose scenes using the browser-based compositor
     * </pre>
     *
     * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        stream.api.live.SceneComposition, stream.api.live.SceneComposition.Builder, stream.api.live.SceneCompositionOrBuilder> 
        getSceneFieldBuilder() {
      if (sceneBuilder_ == null) {
        if (!(typeCase_ == 4)) {
          type_ = stream.api.live.SceneComposition.getDefaultInstance();
        }
        sceneBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            stream.api.live.SceneComposition, stream.api.live.SceneComposition.Builder, stream.api.live.SceneCompositionOrBuilder>(
                (stream.api.live.SceneComposition) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 4;
      onChanged();;
      return sceneBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:live.v21.Composition)
  }

  // @@protoc_insertion_point(class_scope:live.v21.Composition)
  private static final stream.api.live.Composition DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new stream.api.live.Composition();
  }

  public static stream.api.live.Composition getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Composition>
      PARSER = new com.google.protobuf.AbstractParser<Composition>() {
    @java.lang.Override
    public Composition parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Composition(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Composition> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Composition> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public stream.api.live.Composition getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

