/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: live/v21/api.proto

package stream.api.live;

public interface CompositionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:live.v21.Composition)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * compose using an external renderer
   * </pre>
   *
   * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
   * @return Whether the external field is set.
   */
  boolean hasExternal();
  /**
   * <pre>
   * compose using an external renderer
   * </pre>
   *
   * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
   * @return The external.
   */
  stream.api.live.ExternalComposition getExternal();
  /**
   * <pre>
   * compose using an external renderer
   * </pre>
   *
   * <code>.live.v21.ExternalComposition external = 1 [json_name = "external"];</code>
   */
  stream.api.live.ExternalCompositionOrBuilder getExternalOrBuilder();

  /**
   * <pre>
   * compose using the studiosdk renderer
   * </pre>
   *
   * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
   * @return Whether the studioSdk field is set.
   */
  boolean hasStudioSdk();
  /**
   * <pre>
   * compose using the studiosdk renderer
   * </pre>
   *
   * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
   * @return The studioSdk.
   */
  stream.api.live.StudioSdkComposition getStudioSdk();
  /**
   * <pre>
   * compose using the studiosdk renderer
   * </pre>
   *
   * <code>.live.v21.StudioSdkComposition studio_sdk = 2 [json_name = "studioSdk"];</code>
   */
  stream.api.live.StudioSdkCompositionOrBuilder getStudioSdkOrBuilder();

  /**
   * <pre>
   * compose scenes using the browser-based compositor
   * </pre>
   *
   * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the scene field is set.
   */
  boolean hasScene();
  /**
   * <pre>
   * compose scenes using the browser-based compositor
   * </pre>
   *
   * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The scene.
   */
  stream.api.live.SceneComposition getScene();
  /**
   * <pre>
   * compose scenes using the browser-based compositor
   * </pre>
   *
   * <code>.live.v21.SceneComposition scene = 4 [json_name = "scene", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  stream.api.live.SceneCompositionOrBuilder getSceneOrBuilder();

  public stream.api.live.Composition.TypeCase getTypeCase();
}
