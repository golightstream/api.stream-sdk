/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: live/v21/api.proto

package stream.api.live;

public interface DestinationAddressOrBuilder extends
    // @@protoc_insertion_point(interface_extends:live.v21.DestinationAddress)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * rtmp push addressing
   * </pre>
   *
   * <code>.live.v21.DestinationRtmpPushAddress rtmp_push = 1 [json_name = "rtmpPush"];</code>
   * @return Whether the rtmpPush field is set.
   */
  boolean hasRtmpPush();
  /**
   * <pre>
   * rtmp push addressing
   * </pre>
   *
   * <code>.live.v21.DestinationRtmpPushAddress rtmp_push = 1 [json_name = "rtmpPush"];</code>
   * @return The rtmpPush.
   */
  stream.api.live.DestinationRtmpPushAddress getRtmpPush();
  /**
   * <pre>
   * rtmp push addressing
   * </pre>
   *
   * <code>.live.v21.DestinationRtmpPushAddress rtmp_push = 1 [json_name = "rtmpPush"];</code>
   */
  stream.api.live.DestinationRtmpPushAddressOrBuilder getRtmpPushOrBuilder();

  /**
   * <pre>
   * Agora addressing
   * </pre>
   *
   * <code>.live.v21.DestinationAgoraPushAddress agora = 2 [json_name = "agora"];</code>
   * @return Whether the agora field is set.
   */
  boolean hasAgora();
  /**
   * <pre>
   * Agora addressing
   * </pre>
   *
   * <code>.live.v21.DestinationAgoraPushAddress agora = 2 [json_name = "agora"];</code>
   * @return The agora.
   */
  stream.api.live.DestinationAgoraPushAddress getAgora();
  /**
   * <pre>
   * Agora addressing
   * </pre>
   *
   * <code>.live.v21.DestinationAgoraPushAddress agora = 2 [json_name = "agora"];</code>
   */
  stream.api.live.DestinationAgoraPushAddressOrBuilder getAgoraOrBuilder();

  /**
   * <pre>
   * s3 storage addressing
   * </pre>
   *
   * <code>.live.v21.S3StorageAddress s3_storage = 3 [json_name = "s3Storage"];</code>
   * @return Whether the s3Storage field is set.
   */
  boolean hasS3Storage();
  /**
   * <pre>
   * s3 storage addressing
   * </pre>
   *
   * <code>.live.v21.S3StorageAddress s3_storage = 3 [json_name = "s3Storage"];</code>
   * @return The s3Storage.
   */
  stream.api.live.S3StorageAddress getS3Storage();
  /**
   * <pre>
   * s3 storage addressing
   * </pre>
   *
   * <code>.live.v21.S3StorageAddress s3_storage = 3 [json_name = "s3Storage"];</code>
   */
  stream.api.live.S3StorageAddressOrBuilder getS3StorageOrBuilder();

  /**
   * <pre>
   * srt push addressing
   * </pre>
   *
   * <code>.live.v21.DestinationSrtPushAddress srt_push = 4 [json_name = "srtPush"];</code>
   * @return Whether the srtPush field is set.
   */
  boolean hasSrtPush();
  /**
   * <pre>
   * srt push addressing
   * </pre>
   *
   * <code>.live.v21.DestinationSrtPushAddress srt_push = 4 [json_name = "srtPush"];</code>
   * @return The srtPush.
   */
  stream.api.live.DestinationSrtPushAddress getSrtPush();
  /**
   * <pre>
   * srt push addressing
   * </pre>
   *
   * <code>.live.v21.DestinationSrtPushAddress srt_push = 4 [json_name = "srtPush"];</code>
   */
  stream.api.live.DestinationSrtPushAddressOrBuilder getSrtPushOrBuilder();

  public stream.api.live.DestinationAddress.TypeCase getTypeCase();
}
