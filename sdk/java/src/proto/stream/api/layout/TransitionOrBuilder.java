/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apis/layout/v2/api.proto

package stream.api.layout;

public interface TransitionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:apis.layout.v2.Transition)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A list of layout IDs to apply this transition to. If empty,
   * this transition will apply to all scene switches which _do not_ have a matching transition.
   * If multiple transitions match (e.g multiple targetting the layout), a transition will be chosen at random.
   * </pre>
   *
   * <code>repeated string from_layout_ids = 1 [json_name = "fromLayoutIds"];</code>
   * @return A list containing the fromLayoutIds.
   */
  java.util.List<java.lang.String>
      getFromLayoutIdsList();
  /**
   * <pre>
   * A list of layout IDs to apply this transition to. If empty,
   * this transition will apply to all scene switches which _do not_ have a matching transition.
   * If multiple transitions match (e.g multiple targetting the layout), a transition will be chosen at random.
   * </pre>
   *
   * <code>repeated string from_layout_ids = 1 [json_name = "fromLayoutIds"];</code>
   * @return The count of fromLayoutIds.
   */
  int getFromLayoutIdsCount();
  /**
   * <pre>
   * A list of layout IDs to apply this transition to. If empty,
   * this transition will apply to all scene switches which _do not_ have a matching transition.
   * If multiple transitions match (e.g multiple targetting the layout), a transition will be chosen at random.
   * </pre>
   *
   * <code>repeated string from_layout_ids = 1 [json_name = "fromLayoutIds"];</code>
   * @param index The index of the element to return.
   * @return The fromLayoutIds at the given index.
   */
  java.lang.String getFromLayoutIds(int index);
  /**
   * <pre>
   * A list of layout IDs to apply this transition to. If empty,
   * this transition will apply to all scene switches which _do not_ have a matching transition.
   * If multiple transitions match (e.g multiple targetting the layout), a transition will be chosen at random.
   * </pre>
   *
   * <code>repeated string from_layout_ids = 1 [json_name = "fromLayoutIds"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the fromLayoutIds at the given index.
   */
  com.google.protobuf.ByteString
      getFromLayoutIdsBytes(int index);

  /**
   * <code>.apis.layout.v2.Transition.TransitionCut cut = 10 [json_name = "cut"];</code>
   * @return Whether the cut field is set.
   */
  boolean hasCut();
  /**
   * <code>.apis.layout.v2.Transition.TransitionCut cut = 10 [json_name = "cut"];</code>
   * @return The cut.
   */
  stream.api.layout.Transition.TransitionCut getCut();
  /**
   * <code>.apis.layout.v2.Transition.TransitionCut cut = 10 [json_name = "cut"];</code>
   */
  stream.api.layout.Transition.TransitionCutOrBuilder getCutOrBuilder();

  /**
   * <code>.apis.layout.v2.Transition.TransitionCrossfade crossfade = 11 [json_name = "crossfade"];</code>
   * @return Whether the crossfade field is set.
   */
  boolean hasCrossfade();
  /**
   * <code>.apis.layout.v2.Transition.TransitionCrossfade crossfade = 11 [json_name = "crossfade"];</code>
   * @return The crossfade.
   */
  stream.api.layout.Transition.TransitionCrossfade getCrossfade();
  /**
   * <code>.apis.layout.v2.Transition.TransitionCrossfade crossfade = 11 [json_name = "crossfade"];</code>
   */
  stream.api.layout.Transition.TransitionCrossfadeOrBuilder getCrossfadeOrBuilder();

  /**
   * <code>.apis.layout.v2.Transition.TransitionFadeToColor fade_to_color = 12 [json_name = "fadeToColor"];</code>
   * @return Whether the fadeToColor field is set.
   */
  boolean hasFadeToColor();
  /**
   * <code>.apis.layout.v2.Transition.TransitionFadeToColor fade_to_color = 12 [json_name = "fadeToColor"];</code>
   * @return The fadeToColor.
   */
  stream.api.layout.Transition.TransitionFadeToColor getFadeToColor();
  /**
   * <code>.apis.layout.v2.Transition.TransitionFadeToColor fade_to_color = 12 [json_name = "fadeToColor"];</code>
   */
  stream.api.layout.Transition.TransitionFadeToColorOrBuilder getFadeToColorOrBuilder();

  /**
   * <code>.apis.layout.v2.Transition.TransitionSwipe swipe = 13 [json_name = "swipe"];</code>
   * @return Whether the swipe field is set.
   */
  boolean hasSwipe();
  /**
   * <code>.apis.layout.v2.Transition.TransitionSwipe swipe = 13 [json_name = "swipe"];</code>
   * @return The swipe.
   */
  stream.api.layout.Transition.TransitionSwipe getSwipe();
  /**
   * <code>.apis.layout.v2.Transition.TransitionSwipe swipe = 13 [json_name = "swipe"];</code>
   */
  stream.api.layout.Transition.TransitionSwipeOrBuilder getSwipeOrBuilder();

  /**
   * <code>.apis.layout.v2.Transition.TransitionStinger stinger = 14 [json_name = "stinger"];</code>
   * @return Whether the stinger field is set.
   */
  boolean hasStinger();
  /**
   * <code>.apis.layout.v2.Transition.TransitionStinger stinger = 14 [json_name = "stinger"];</code>
   * @return The stinger.
   */
  stream.api.layout.Transition.TransitionStinger getStinger();
  /**
   * <code>.apis.layout.v2.Transition.TransitionStinger stinger = 14 [json_name = "stinger"];</code>
   */
  stream.api.layout.Transition.TransitionStingerOrBuilder getStingerOrBuilder();

  public stream.api.layout.Transition.TransitionTypeCase getTransitionTypeCase();
}
