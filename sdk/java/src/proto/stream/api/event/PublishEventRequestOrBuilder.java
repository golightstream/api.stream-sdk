/* ---------------------------------------------------------------------------------------------
 * Copyright (c) Infiniscene, Inc. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * -------------------------------------------------------------------------------------------- */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apis/event/v2/api.proto

package stream.api.event;

public interface PublishEventRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:apis.event.v2.PublishEventRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name of the event.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of the event.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Value of the event. This can be a free-form value which we do not inspect.
   * </pre>
   *
   * <code>.google.protobuf.Struct payload = 2 [json_name = "payload", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the payload field is set.
   */
  boolean hasPayload();
  /**
   * <pre>
   * Value of the event. This can be a free-form value which we do not inspect.
   * </pre>
   *
   * <code>.google.protobuf.Struct payload = 2 [json_name = "payload", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The payload.
   */
  com.google.protobuf.Struct getPayload();
  /**
   * <pre>
   * Value of the event. This can be a free-form value which we do not inspect.
   * </pre>
   *
   * <code>.google.protobuf.Struct payload = 2 [json_name = "payload", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  com.google.protobuf.StructOrBuilder getPayloadOrBuilder();

  /**
   * <pre>
   * Metadata associated with the publishing of the event.
   * Typically this is information about _why_ the event happened. Use `payload` for
   * _what_ the event is.
   * </pre>
   *
   * <code>optional .google.protobuf.Value request_metadata = 4 [json_name = "requestMetadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return Whether the requestMetadata field is set.
   */
  boolean hasRequestMetadata();
  /**
   * <pre>
   * Metadata associated with the publishing of the event.
   * Typically this is information about _why_ the event happened. Use `payload` for
   * _what_ the event is.
   * </pre>
   *
   * <code>optional .google.protobuf.Value request_metadata = 4 [json_name = "requestMetadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The requestMetadata.
   */
  com.google.protobuf.Value getRequestMetadata();
  /**
   * <pre>
   * Metadata associated with the publishing of the event.
   * Typically this is information about _why_ the event happened. Use `payload` for
   * _what_ the event is.
   * </pre>
   *
   * <code>optional .google.protobuf.Value request_metadata = 4 [json_name = "requestMetadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   */
  com.google.protobuf.ValueOrBuilder getRequestMetadataOrBuilder();

  /**
   * <pre>
   * Scope the event to a specific target
   * </pre>
   *
   * <code>optional .apis.event.v2.EventTarget target = 3 [json_name = "target"];</code>
   * @return Whether the target field is set.
   */
  boolean hasTarget();
  /**
   * <pre>
   * Scope the event to a specific target
   * </pre>
   *
   * <code>optional .apis.event.v2.EventTarget target = 3 [json_name = "target"];</code>
   * @return The target.
   */
  stream.api.event.EventTarget getTarget();
  /**
   * <pre>
   * Scope the event to a specific target
   * </pre>
   *
   * <code>optional .apis.event.v2.EventTarget target = 3 [json_name = "target"];</code>
   */
  stream.api.event.EventTargetOrBuilder getTargetOrBuilder();
}
